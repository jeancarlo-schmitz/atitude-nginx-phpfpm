server {
    listen 80;
    server_name api.recuperajur.com.br;
    
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
        default_type "text/plain";
    }
    
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name api.recuperajur.com.br;
    
    root /var/www/html/atitude-recuperajur-service/public;
    index index.php;
    
    ssl_certificate /etc/letsencrypt/live/api.recuperajur.com.br/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.recuperajur.com.br/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # IMPORTANTE: more_clear_headers para remover headers duplicados da aplicação
    # Se não tiver o módulo more_headers, use proxy_hide_header
    
    location / {
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-User-Id' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    location /api/recuperacao-judicial/arquivos/donwload {
        fastcgi_pass php:9000;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root/index.php;

        # Evita problemas com arquivos grandes
        fastcgi_buffering off;
        fastcgi_read_timeout 1200;

        # CORS específico (se quiser garantir)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-User-Id' always;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_index index.php;
        fastcgi_read_timeout 300;
        
        # SOBRESCREVER headers CORS da aplicação - APENAS ESTAS LINHAS
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, X-User-Id' always;
        
        # Remover headers duplicados que vêm da aplicação
        fastcgi_hide_header 'Access-Control-Allow-Origin';
        fastcgi_hide_header 'Access-Control-Allow-Methods'; 
        fastcgi_hide_header 'Access-Control-Allow-Headers';
    }
    
    location ~ /\.env {
        deny all;
        return 404;
    }
    
    location ~ /\.(?!well-known) {
        deny all;
        return 404;
    }
}